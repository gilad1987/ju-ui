@mixin makeGrid($grid_prefix) {
  @each $size in 9,24{
    @for $i from 1 through $size {
        .ju-col-#{$grid_prefix}-#{$i}of#{$size} { width: $i*(100/$size)+%; }
        .ju-col-#{$grid_prefix}-offset-left-#{$i}of#{$size} { margin-left: $i*(100/$size)+%; }
        .ju-col-#{$grid_prefix}-offset-right-#{$i}of#{$size} { margin-right: $i*(100/$size)+%; }
        .ju-col-#{$grid_prefix}-push-left-#{$i}of#{$size} { left: $i*(100/$size)+%; }
        .ju-col-#{$grid_prefix}-pull-right-#{$i}of#{$size} { right: $i*(100/$size)+%; }

    }
  }
}

@function getItem($list,$key) {
  @return nth($list, $key);
}


@mixin addButtonColorSuffix($button_colors) {
  @each $name, $colors in $button_colors{
    &--#{$name}{
      background-color: #{getItem($colors,1)};
      &:hover {  background-color:#{getItem($colors,2)};  }
      &:active {  background-color: #{getItem($colors,3)};  }
      &.is-inverse{
        background-color: white;
        color:#{getItem($colors,1)};
        border:1px solid #{getItem($colors,1)};
        &:hover {  color:white;background-color:#{getItem($colors,1)};  }
      }
    }
  }
}

@mixin createUtilityBackgroundColors($button_colors) {
  $suffix:('','--hover','--active');
  @each $name, $colors in $button_colors{
    @for $i from 1 through 3{
      .u-Background--#{$name}#{getItem($suffix,$i)}{
        background-color: #{getItem($colors,$i)};
        .text{
          &:after{
            content:getItem($colors,$i); }
        }
      }
    }
  }

}

